CREATE TABLE IF NOT EXISTS AUTH_OAUTH2_CLIENTS (
            CLIENT_ID VARCHAR(256),
            CLIENT_SECRET VARCHAR(512),
            REDIRECT_URI VARCHAR(1024) DEFAULT NULL,
            PRIMARY KEY (CLIENT_ID)
);

CREATE TABLE IF NOT EXISTS AUTH_OAUTH2_AUTHORIZATION_CODE (
            CODE_ID INTEGER NOT NULL AUTO_INCREMENT,
            CLIENT_ID VARCHAR(256),
            AUTHORIZATION_CODE VARCHAR(512),
            REDIRECT_URI VARCHAR(1024) DEFAULT NULL,
            SCOPE VARCHAR(2048),
            PRIMARY KEY (CODE_ID)
);

CREATE TABLE IF NOT EXISTS AUTH_OAUTH2_APPLICATION (
            ID INTEGER NOT NULL AUTO_INCREMENT,
            CLIENT_ID VARCHAR(255),
            CLIENT_SECRET VARCHAR(512),
            AUTHZ_USER VARCHAR(128),
            APP_NAME VARCHAR(255),
            OAUTH_VERSION VARCHAR(128),
            REDIRECT_URI VARCHAR(1024) DEFAULT NULL,
            GRANT_TYPES VARCHAR (1024) DEFAULT NULL,
            APP_STATE VARCHAR (25) DEFAULT 'ACTIVE',
            TOKEN_TYPE VARCHAR (25) DEFAULT 'Default',
            USER_ACCESS_TOKEN_EXPIRE_TIME BIGINT DEFAULT NULL,
            APP_ACCESS_TOKEN_EXPIRE_TIME BIGINT DEFAULT NULL,
            REFRESH_TOKEN_EXPIRE_TIME BIGINT DEFAULT NULL,
            CONSTRAINT CLIENT_CONSTRAINT UNIQUE (CLIENT_ID, CLIENT_SECRET),
            PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS AUTH_OAUTH2_APPLICATION_AUDIENCES (
            CLIENT_ID VARCHAR(255),
            AUDIENCE_VALUE VARCHAR(255),
            FOREIGN KEY (CLIENT_ID) REFERENCES AUTH_OAUTH2_APPLICATION(CLIENT_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS AUTH_OAUTH2_ACCESS_TOKEN (
            ID INTEGER NOT NULL AUTO_INCREMENT,
            ACCESS_TOKEN VARCHAR(255),
            REFRESH_TOKEN VARCHAR(512),
            CONSUMER_KEY_ID VARCHAR(255),
            AUTHZ_USER VARCHAR(128),
            TIME_CREATED VARCHAR(1024) DEFAULT NULL,
            REFRESH_TOKEN_TIME_CREATED VARCHAR (1024) DEFAULT NULL,
            VALIDITY_PERIOD BIGINT,
            REFRESH_TOKEN_VALIDITY_PERIOD BIGINT,
            TOKEN_SCOPE_HASH VARCHAR(128),
            TOKEN_STATE VARCHAR(25) DEFAULT 'ACTIVE',
            USER_TYPE VARCHAR(128),
            GRANT_TYPE VARCHAR(128),
            CONSTRAINT TOKEN_CONSTRAINT UNIQUE (ACCESS_TOKEN),
            PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS AUTH_OAUTH2_ACCESS_TOKEN_SCOPE (
            ID INTEGER (255) NOT NULL AUTO_INCREMENT,
            TOKEN_ID INTEGER (255),
            TOKEN_SCOPE VARCHAR (255),
            PRIMARY KEY (ID),
            FOREIGN KEY (TOKEN_ID) REFERENCES AUTH_OAUTH2_ACCESS_TOKEN(ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS AUTH_OAUTH2_SCOPE (
            SCOPE_ID INTEGER NOT NULL AUTO_INCREMENT,
            NAME VARCHAR(255) NOT NULL,
            DISPLAY_NAME VARCHAR(255) NOT NULL,
            DESCRIPTION VARCHAR(512),
            PRIMARY KEY (SCOPE_ID)
);

CREATE UNIQUE INDEX SCOPE_INDEX ON AUTH_OAUTH2_SCOPE (NAME);

CREATE TABLE IF NOT EXISTS AUTH_OAUTH2_SCOPE_BINDING (
            SCOPE_ID INTEGER NOT NULL,
            SCOPE_BINDING VARCHAR(255),
            FOREIGN KEY (SCOPE_ID) REFERENCES AUTH_OAUTH2_SCOPE(SCOPE_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS AUTH_OAUTH2_RESOURCE_SCOPE (
            RESOURCE_PATH VARCHAR(255) NOT NULL,
            SCOPE_ID INTEGER NOT NULL,
            PRIMARY KEY (RESOURCE_PATH),
            FOREIGN KEY (SCOPE_ID) REFERENCES AUTH_OAUTH2_SCOPE (SCOPE_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS AUTH_USER_NAME_MAPPING (
  PSEUDO_NAME VARCHAR(255) NOT NULL,
  USER_DOMAIN_NAME VARCHAR(255),
  USER_IDENTIFIER VARCHAR(255),
  PRIMARY KEY(PSEUDO_NAME)
);
